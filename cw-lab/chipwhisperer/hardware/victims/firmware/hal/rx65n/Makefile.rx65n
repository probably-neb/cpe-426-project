VPATH += :$(HALPATH)/rx65n
EXTRAINCDIRS += $(HALPATH)/rx65n/include $(HALPATH)/rx65n
TMPSRC += $(wildcard $(HALPATH)/rx65n/*.c)
SRC += clkconf.c
SRC += $(subst $(HALPATH)/rx65n/,,$(TMPSRC))
#SRC += startup.c
#$(info SRC is $(SRC))
ifeq ($(CRYPTO_TARGET),HWAES)
    SRC += r_tsip_rx65n_little.lib
endif

ASRC += reset_program.S

CC = rx-elf-gcc
OBJCOPY = rx-elf-objcopy
OBJDUMP = rx-elf-objdump
SIZE = rx-elf-size
AR = rx-elf-ar rcs
NM = rx-elf-nm

MCU_FLAGS = -mcpu=rx64m -misa=v2
CFLAGS += -fdata-sections -fsigned-char -g2 -m64bit-doubles -mlittle-endian-data -std=gnu99 -DGRROSE -D__RX600__ -D__RTOS -DUSING_XUR -MMD -MP
CPPFLAGS += -fdata-sections -fsigned-char -g2 -m64bit-doubles -mlittle-endian-data -std=gnu99 -DGRROSE -D__RX600__ -D__RTOS -DUSING_XUR -MMD -MP
ASFLAGS += -fdata-sections -fsigned-char -g2 -m64bit-doubles -mlittle-endian-data -std=gnu99 -DGRROSE -D__RX600__ -D__RTOS -DUSING_XUR -MMD -MP -nostartfiles

LDFLAGS += --specs=nosys.specs -T $(HALPATH)/rx65n/linker_script.ld -nostartfiles
FORMAT=binary