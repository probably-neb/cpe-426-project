# Makefile for CW308T-PSOC62 Target, with CY8C6247BZI-D44 device

VPATH += :$(HALPATH)/psoc62 
VPATH += :$(HALPATH)/psoc62/psoc6sw-1.1/components/psoc6pdl/devices/psoc6/startup/gcc
VPATH += :$(HALPATH)/psoc62/psoc6sw-1.1/components/psoc6pdl/devices/psoc6/startup
VPATH += :$(HALPATH)/psoc62/generated_source
VPATH += :$(HALPATH)/psoc62/psoc6sw-1.1/components/psoc6pdl/drivers/source
VPATH += :$(HALPATH)/psoc62/psoc6sw-1.1/components/psoc6pdl/drivers/source/TOOLCHAIN_GCC_ARM
VPATH += :$(HALPATH)/psoc62/COMPONENT_CM0P_CRYPTO

EXTRAINCDIRS += $(HALPATH)/psoc62 $(HALPATH)/psoc62/generated_source
EXTRAINCDIRS += $(HALPATH)/psoc62/psoc6sw-1.1/components/psoc6pdl/cmsis/include
EXTRAINCDIRS += $(HALPATH)/psoc62/psoc6sw-1.1/components/psoc6pdl/devices/psoc6/include 
EXTRAINCDIRS += $(HALPATH)/psoc62/psoc6sw-1.1/components/psoc6pdl/drivers/include 

SRC += system_psoc6_cm4.c psoc62_hal.c
ASRC += startup_psoc6_01_cm4.S cy_syslib_gcc.S

SRC += cycfg_clocks.c \
       cycfg_peripherals.c \
       cycfg_pins.c \
       cycfg_platform.c \
       cycfg_routing.c \
       cycfg.c
       
# Only 1 of these gets actually included
SRC += psoc6_01_cm0p_crypto.c
SRC += psoc6_02_cm0p_crypto.c
SRC += psoc6_03_cm0p_crypto.c
       
SRC += cy_crypto_core_hw.c \
       cy_crypto_core_hw_v1.c \
       cy_crypto_core_aes_v1.c \
       cy_crypto_core_aes_v2.c \
       cy_crypto_core_mem_v1.c \
       cy_crypto_core_mem_v2.c \
       cy_device.c \
       cy_efuse.c \
       cy_flash.c \
       cy_gpio.c \
       cy_ipc_drv.c \
       cy_ipc_pipe.c \
       cy_ipc_sema.c \
       cy_prot.c \
       cy_scb_common.c \
       cy_scb_uart.c \
       cy_sysclk.c \
       cy_syslib.c \
       cy_sysint.c \
       cy_syspm.c \
       cy_systick.c

MCU_FLAGS = -mcpu=cortex-m4

CC = arm-none-eabi-gcc
OBJCOPY = arm-none-eabi-objcopy
OBJDUMP = arm-none-eabi-objdump
SIZE = arm-none-eabi-size
AR = arm-none-eabi-ar rcs
NM = arm-none-eabi-nm

#Output Format = Binary for this target
FORMAT = binary

CFLAGS += -fdata-sections -ffunction-sections -mthumb -mlong-calls -ffat-lto-objects -mfloat-abi=soft
CPPFLAGS += $(CFLAGS)
ASFLAGS += -mthumb -mfloat-abi=soft

CDEFS += -DCY8C6247BZI_D44
CDEFS += -DAPP_NAME='"CustomApp_cm4"'
CDEFS += -DDEBUG

CPPDEFS += $(CDEFS)

#TODO - somehow with 's' optimization causes a fault later (!)
OPT = 1

LDFLAGS += -specs=nano.specs -T $(HALPATH)/psoc62/cy8c6xx7_cm4_dual.ld -Xlinker --gc-sections -lm

### Special signing needed for image to actually load 
MCUELFTOOL = $(HALPATH)/psoc62/tools/win_x64/cymcuelftool.exe

#Check if still needed
#signed: all
#	$(MCUELFTOOL) --sign $(TARGET-PLAT).elf --output $(TARGET-PLAT)_cm4_signed.elf
#	$(MCUELFTOOL) --merge $(TARGET-PLAT)_cm4_signed.elf $(HALPATH)/psoc62/psoc6_01_cm0p_sleep_signed.elf --output $(TARGET-PLAT)_cm4_final.elf
